import requests
import json
from global_vars import *


# login function
def backtory_login():
    login_headers = {'X-Backtory-Authentication-Id': BACKTORY_AUTHENTICATION_ID,
                     'X-Backtory-Authentication-Key': BACKTORY_AUTHENTICATION_KEY}
    login_payload = {'username': USER_NAME, 'password': PASSWORD}
    login_r = requests.post("https://api.backtory.com/auth/login", data=login_payload, headers=login_headers)
    if login_r.status_code == 200:
        access_token = login_r.json()['access_token']
        expires_in = login_r.json()['expires_in']
        return access_token, expires_in
    else:
        print("Required id(s) that you entered is invalid!")
        return None, None


def get_refresh_token():
    refresh_headers = {'X-Backtory-Authentication-Id': BACKTORY_AUTHENTICATION_ID,
                     'X-Backtory-Authentication-Key': BACKTORY_AUTHENTICATION_KEY}
    refresh_payload = {'username': USER_NAME, 'password': PASSWORD}
    refresh_r = requests.post("https://api.backtory.com/auth/login", data=refresh_payload, headers=refresh_headers)
    if refresh_r.status_code == 200:
        refresh_token = refresh_r.json()['refresh_token']
        return refresh_token
    else:
        print("Required id(s) that you entered is invalid!")
        return None


def get_new_access_token(refresh_token):
    new_access_headers = {'X-Backtory-Authentication-Id': BACKTORY_AUTHENTICATION_ID,
                          'X-Backtory-Authentication-Key': BACKTORY_AUTHENTICATION_KEY,
                          'X-Backtory-Authentication-Refresh': '1',
                          'Content-Type': 'multipart/form-data'}
    new_access_payload = {'refresh_token': refresh_token}
    new_access_r = requests.post("https://api.backtory.com/auth/login", data=new_access_payload, headers=new_access_headers)
    if new_access_r.status_code == 200:
        new_access_token = new_access_r.json()['access_token']
        new_expires_in = new_access_r.json()['expires_in']
        return new_access_token, new_expires_in
    else:
        print("Required id(s) that you entered is invalid!")
        return None, None


def is_access_token_valid(expires_in):
    if expires_in <= 0:
        return False
    else:
        return True


def upload_file(file_name, headers, destination_path, replacing):
    with open(file_name, 'rb') as f:
        main_file = {'fileItems[0].fileToUpload': f}
        upload_data = {'fileItems[0].path': destination_path, 'fileItems[0].replacing': replacing}
        upload_response = requests.post("http://storage.backtory.com/files", data=upload_data, files=main_file,
                                        headers=headers)

        if upload_response.status_code == 201:
            output_link = "http://storage.backtory.com/files" + upload_response.json()['savedFilesUrls'][0]
            return output_link
        else:
            print("Required parameter(s) that you entered is invalid!")
            return None


def main():
    access_token, expires_in = backtory_login()
    if access_token and expires_in:

        if is_access_token_valid(expires_in):

            # upload file section
            upload_headers = {'Authorization': 'Bearer' + ' ' + access_token,
                              'X-Backtory-Storage-Id': BACKTORY_STORAGE_ID}

            output_link = upload_file('img.jpg', upload_headers, '/path1/', True)

            print()
            print(output_link)

        else:
            refresh_token = get_refresh_token()
            new_access_token, new_expires_in = get_new_access_token(refresh_token)

            # repeat above check and upload file


main()







